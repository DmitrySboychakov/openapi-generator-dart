{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "description": "# Salad API\n\nThis API stores the inventory of salad for a store. \n\n",
    "version": "0.1.0"
  },
  "paths": {
    "/inventory": {
      "get": {
        "summary": "Inventory",
        "description": "Return the entire inventory",
        "operationId": "inventory_inventory_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Item-Output"
                  },
                  "type": "array",
                  "title": "Response Inventory Inventory Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Inventory Add",
        "description": "Add a new item to the inventory",
        "operationId": "inventory_add_inventory_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Item-Input"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/{item}": {
      "get": {
        "summary": "Item Get",
        "description": "Return the inventory for a specific item",
        "operationId": "item_get_inventory__item__get",
        "parameters": [
          {
            "name": "item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Item"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Inventory Remove",
        "description": "Delete an item from the inventory",
        "operationId": "inventory_remove_inventory__item__delete",
        "parameters": [
          {
            "name": "item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Item"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/{item}/add": {
      "get": {
        "summary": "Item Add",
        "description": "Increase stock levels for an item",
        "operationId": "item_add_inventory__item__add_get",
        "parameters": [
          {
            "name": "item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Item"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/{item}/remove": {
      "get": {
        "summary": "Item Remove",
        "description": "Decrease stock levels for an item",
        "operationId": "item_remove_inventory__item__remove_get",
        "parameters": [
          {
            "name": "item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Item"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Healthcheck",
        "description": "Root health check",
        "operationId": "healthcheck__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Item-Input": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "emoji": {
            "type": "string",
            "title": "Emoji"
          },
          "cost_cents": {
            "type": "integer",
            "title": "Cost Cents"
          },
          "stock_count": {
            "type": "integer",
            "title": "Stock Count"
          },
          "image_url": {
            "type": "string",
            "title": "Image Url"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "emoji",
          "cost_cents",
          "stock_count",
          "image_url"
        ],
        "title": "Item"
      },
      "Item-Output": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "emoji": {
            "type": "string",
            "title": "Emoji"
          },
          "cost_cents": {
            "type": "integer",
            "title": "Cost Cents"
          },
          "stock_count": {
            "type": "integer",
            "title": "Stock Count"
          },
          "image_url": {
            "type": "string",
            "title": "Image Url"
          },
          "cost_AUD": {
            "type": "string",
            "title": "Cost Aud",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "emoji",
          "cost_cents",
          "stock_count",
          "image_url",
          "cost_AUD"
        ],
        "title": "Item"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}
